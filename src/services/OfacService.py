import requests
from bs4 import BeautifulSoup
from src.models.OfacElementModel import OfacElement
from src.models.ResponseModel import Response


def get_data_from_sanctions_list(name): 
    url = 'https://sanctionssearch.ofac.treas.gov/Default.aspx'
    elements = []

    # Payload para el POST request
    payload = {
    'ctl00_ctl03_HiddenField': ';;AjaxControlToolkit, Version=3.5.40412.0, Culture=neutral, PublicKeyToken=28f01b0e84b6d53e:en-US:1547e793-5b7e-48fe-8490-03a375b13a33:475a4ef5:5546a2b:d2e10b12:497ef277:effe2a26',
    '__EVENTTARGET' : '',
    '__EVENTARGUMENT':'' ,
    '__VIEWSTATE': '',
    '__VIEWSTATEGENERATOR': 'CA0B0334',
    'ctl00$MainContent$ddlType': '',
    'ctl00$MainContent$txtAddress': '',
    'ctl00$MainContent$txtLastName': name,
    'ctl00$MainContent$txtCity': '',
    'ctl00$MainContent$txtID': '',
    'ctl00$MainContent$txtState': '',
    'ctl00$MainContent$lstPrograms': '',
    'ctl00$MainContent$ddlCountry': '',
    'ctl00$MainContent$ddlList': '',
    'ctl00$MainContent$Slider1': '100',
    'ctl00$MainContent$Slider1_Boundcontrol': '100',
    'ctl00$MainContent$btnSearch': 'Search'
    }

    response = requests.post(url, data=payload)


    if response.status_code == 200:
        print("Solicitud exitosa")
    else:
        print(f"Error en la solicitud: {response.status_code}")

    soup = BeautifulSoup(response.text, 'html.parser')

    # Encontramos la tabla de resultados
    table = soup.find('table', id='gvSearchResults')

    if table:
        rows = table.find_all('tr')
        
        for row in rows:
            cols = row.find_all('td')
            data = [col.get_text(strip=True) for col in cols]
            if len(data) >= 6:
                element = OfacElement(
                    name=data[0],         
                    address=data[1],      
                    type=data[2],        
                    program=data[3],      
                    list=data[4],         
                    score=int(data[5])    
                )
                elements.append(element)
    else:
        print("No se encontró la tabla de resultados.")
        print(soup)
    
    rsp = Response(total=len(elements), data=elements)
    return rsp


